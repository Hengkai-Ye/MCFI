diff -rupN nginx-1.4.0.native/nginx.sh nginx-1.4.0/nginx.sh
--- nginx-1.4.0.native/nginx.sh	1969-12-31 19:00:00.000000000 -0500
+++ nginx-1.4.0/nginx.sh	2015-03-01 11:44:28.625925876 -0500
@@ -0,0 +1,3 @@
+#!/bin/bash
+
+./configure --with-cc=/home/ben/MCFI/toolchain/bin/clang --without-pcre --without-http_rewrite_module --without-http_gzip_module --with-cc-opt="-O2" --prefix=/home/ben/MCFI/server --sbin-path=/home/ben/MCFI/server/bin --conf-path=/home/ben/MCFI/server/conf --error-log-path=/home/ben/MCFI/server/error --pid-path=/home/ben/MCFI/server/pid --lock-path=/home/ben/MCFI/server/lock
diff -rupN nginx-1.4.0.native/src/event/ngx_event.c nginx-1.4.0/src/event/ngx_event.c
--- nginx-1.4.0.native/src/event/ngx_event.c	2013-03-15 16:00:49.000000000 -0400
+++ nginx-1.4.0/src/event/ngx_event.c	2014-12-20 14:19:36.199413025 -0500
@@ -572,6 +572,9 @@ ngx_event_module_init(ngx_cycle_t *cycle
 #if !(NGX_WIN32)
 
 static void
+ngx_timer_signal_handler(int signo) __attribute__((signalhandler));
+
+static void
 ngx_timer_signal_handler(int signo)
 {
     ngx_event_timer_alarm = 1;
diff -rupN nginx-1.4.0.native/src/http/modules/ngx_http_charset_filter_module.c nginx-1.4.0/src/http/modules/ngx_http_charset_filter_module.c
--- nginx-1.4.0.native/src/http/modules/ngx_http_charset_filter_module.c	2012-01-18 10:07:43.000000000 -0500
+++ nginx-1.4.0/src/http/modules/ngx_http_charset_filter_module.c	2015-03-08 21:02:10.080733612 -0400
@@ -540,13 +540,13 @@ ngx_http_charset_ctx(ngx_http_request_t
 
 
 static ngx_int_t
-ngx_http_charset_body_filter(ngx_http_request_t *r, ngx_chain_t *in)
+ngx_http_charset_body_filter(void *context, ngx_chain_t *in)
 {
     ngx_int_t                rc;
     ngx_buf_t               *b;
     ngx_chain_t             *cl, *out, **ll;
     ngx_http_charset_ctx_t  *ctx;
-
+    ngx_http_request_t *r = (ngx_http_request_t*)context;
     ctx = ngx_http_get_module_ctx(r, ngx_http_charset_filter_module);
 
     if (ctx == NULL || ctx->table == NULL) {
diff -rupN nginx-1.4.0.native/src/http/modules/ngx_http_chunked_filter_module.c nginx-1.4.0/src/http/modules/ngx_http_chunked_filter_module.c
--- nginx-1.4.0.native/src/http/modules/ngx_http_chunked_filter_module.c	2013-02-18 08:50:52.000000000 -0500
+++ nginx-1.4.0/src/http/modules/ngx_http_chunked_filter_module.c	2015-03-08 21:01:01.576733621 -0400
@@ -98,7 +98,7 @@ ngx_http_chunked_header_filter(ngx_http_
 
 
 static ngx_int_t
-ngx_http_chunked_body_filter(ngx_http_request_t *r, ngx_chain_t *in)
+ngx_http_chunked_body_filter(void *context, ngx_chain_t *in)
 {
     u_char                         *chunk;
     off_t                           size;
@@ -106,7 +106,7 @@ ngx_http_chunked_body_filter(ngx_http_re
     ngx_buf_t                      *b;
     ngx_chain_t                    *out, *cl, *tl, **ll;
     ngx_http_chunked_filter_ctx_t  *ctx;
-
+    ngx_http_request_t *r = (ngx_http_request_t*)context;
     if (in == NULL || !r->chunked || r->header_only) {
         return ngx_http_next_body_filter(r, in);
     }
diff -rupN nginx-1.4.0.native/src/http/modules/ngx_http_fastcgi_module.c nginx-1.4.0/src/http/modules/ngx_http_fastcgi_module.c
--- nginx-1.4.0.native/src/http/modules/ngx_http_fastcgi_module.c	2013-02-01 09:41:50.000000000 -0500
+++ nginx-1.4.0/src/http/modules/ngx_http_fastcgi_module.c	2015-03-08 21:25:10.248733448 -0400
@@ -2579,7 +2579,7 @@ ngx_http_fastcgi_merge_params(ngx_conf_t
             return NGX_ERROR;
         }
 
-        copy->code = (ngx_http_script_code_pt) ngx_http_script_copy_len_code;
+        copy->code = ngx_http_script_copy_len_code_wrapper;
         copy->len = src[i].key.len;
 
         copy = ngx_array_push_n(conf->params_len,
@@ -2588,7 +2588,7 @@ ngx_http_fastcgi_merge_params(ngx_conf_t
             return NGX_ERROR;
         }
 
-        copy->code = (ngx_http_script_code_pt) ngx_http_script_copy_len_code;
+        copy->code = ngx_http_script_copy_len_code_wrapper;
         copy->len = src[i].skip_empty;
 
 
diff -rupN nginx-1.4.0.native/src/http/modules/ngx_http_proxy_module.c nginx-1.4.0/src/http/modules/ngx_http_proxy_module.c
--- nginx-1.4.0.native/src/http/modules/ngx_http_proxy_module.c	2013-02-27 08:29:50.000000000 -0500
+++ nginx-1.4.0/src/http/modules/ngx_http_proxy_module.c	2015-03-08 21:27:17.000733433 -0400
@@ -2962,8 +2962,8 @@ ngx_http_proxy_merge_headers(ngx_conf_t
                 return NGX_ERROR;
             }
 
-            copy->code = (ngx_http_script_code_pt)
-                                                 ngx_http_script_copy_len_code;
+            copy->code = ngx_http_script_copy_len_code_wrapper;
+
             copy->len = src[i].key.len + sizeof(": ") - 1
                         + src[i].value.len + sizeof(CRLF) - 1;
 
@@ -2997,8 +2997,8 @@ ngx_http_proxy_merge_headers(ngx_conf_t
                 return NGX_ERROR;
             }
 
-            copy->code = (ngx_http_script_code_pt)
-                                                 ngx_http_script_copy_len_code;
+            copy->code = ngx_http_script_copy_len_code_wrapper;
+
             copy->len = src[i].key.len + sizeof(": ") - 1;
 
 
@@ -3038,8 +3038,8 @@ ngx_http_proxy_merge_headers(ngx_conf_t
                 return NGX_ERROR;
             }
 
-            copy->code = (ngx_http_script_code_pt)
-                                                 ngx_http_script_copy_len_code;
+            copy->code = ngx_http_script_copy_len_code_wrapper;
+
             copy->len = sizeof(CRLF) - 1;
 
 
diff -rupN nginx-1.4.0.native/src/http/modules/ngx_http_range_filter_module.c nginx-1.4.0/src/http/modules/ngx_http_range_filter_module.c
--- nginx-1.4.0.native/src/http/modules/ngx_http_range_filter_module.c	2012-07-09 13:04:37.000000000 -0400
+++ nginx-1.4.0/src/http/modules/ngx_http_range_filter_module.c	2015-03-08 21:01:16.656733619 -0400
@@ -573,10 +573,10 @@ ngx_http_range_not_satisfiable(ngx_http_
 
 
 static ngx_int_t
-ngx_http_range_body_filter(ngx_http_request_t *r, ngx_chain_t *in)
+ngx_http_range_body_filter(void *context, ngx_chain_t *in)
 {
     ngx_http_range_filter_ctx_t  *ctx;
-
+    ngx_http_request_t *r = (ngx_http_request_t*)context;
     if (in == NULL) {
         return ngx_http_next_body_filter(r, in);
     }
diff -rupN nginx-1.4.0.native/src/http/modules/ngx_http_scgi_module.c nginx-1.4.0/src/http/modules/ngx_http_scgi_module.c
--- nginx-1.4.0.native/src/http/modules/ngx_http_scgi_module.c	2013-02-23 06:50:42.000000000 -0500
+++ nginx-1.4.0/src/http/modules/ngx_http_scgi_module.c	2015-03-08 21:27:58.092733428 -0400
@@ -1539,7 +1539,7 @@ ngx_http_scgi_merge_params(ngx_conf_t *c
             return NGX_ERROR;
         }
 
-        copy->code = (ngx_http_script_code_pt) ngx_http_script_copy_len_code;
+        copy->code = ngx_http_script_copy_len_code_wrapper;
         copy->len = src[i].key.len + 1;
 
         copy = ngx_array_push_n(conf->params_len,
@@ -1548,7 +1548,7 @@ ngx_http_scgi_merge_params(ngx_conf_t *c
             return NGX_ERROR;
         }
 
-        copy->code = (ngx_http_script_code_pt) ngx_http_script_copy_len_code;
+        copy->code = ngx_http_script_copy_len_code_wrapper;
         copy->len = src[i].skip_empty;
 
 
diff -rupN nginx-1.4.0.native/src/http/modules/ngx_http_ssi_filter_module.c nginx-1.4.0/src/http/modules/ngx_http_ssi_filter_module.c
--- nginx-1.4.0.native/src/http/modules/ngx_http_ssi_filter_module.c	2012-08-17 11:35:50.000000000 -0400
+++ nginx-1.4.0/src/http/modules/ngx_http_ssi_filter_module.c	2015-03-08 21:01:54.196733614 -0400
@@ -369,7 +369,7 @@ ngx_http_ssi_header_filter(ngx_http_requ
 
 
 static ngx_int_t
-ngx_http_ssi_body_filter(ngx_http_request_t *r, ngx_chain_t *in)
+ngx_http_ssi_body_filter(void *context, ngx_chain_t *in)
 {
     size_t                     len;
     ngx_int_t                  rc;
@@ -384,7 +384,7 @@ ngx_http_ssi_body_filter(ngx_http_reques
     ngx_http_ssi_loc_conf_t   *slcf;
     ngx_http_ssi_main_conf_t  *smcf;
     ngx_str_t                 *params[NGX_HTTP_SSI_MAX_PARAMS + 1];
-
+    ngx_http_request_t *r = (ngx_http_request_t*)context;
     ctx = ngx_http_get_module_ctx(r, ngx_http_ssi_filter_module);
 
     if (ctx == NULL
diff -rupN nginx-1.4.0.native/src/http/modules/ngx_http_uwsgi_module.c nginx-1.4.0/src/http/modules/ngx_http_uwsgi_module.c
--- nginx-1.4.0.native/src/http/modules/ngx_http_uwsgi_module.c	2013-02-23 06:50:42.000000000 -0500
+++ nginx-1.4.0/src/http/modules/ngx_http_uwsgi_module.c	2015-03-08 21:28:28.408733424 -0400
@@ -1581,7 +1581,7 @@ ngx_http_uwsgi_merge_params(ngx_conf_t *
             return NGX_ERROR;
         }
 
-        copy->code = (ngx_http_script_code_pt) ngx_http_script_copy_len_code;
+        copy->code = ngx_http_script_copy_len_code_wrapper;
         copy->len = src[i].key.len;
 
         copy = ngx_array_push_n(conf->params_len,
@@ -1590,7 +1590,7 @@ ngx_http_uwsgi_merge_params(ngx_conf_t *
             return NGX_ERROR;
         }
 
-        copy->code = (ngx_http_script_code_pt) ngx_http_script_copy_len_code;
+        copy->code = ngx_http_script_copy_len_code_wrapper;
         copy->len = src[i].skip_empty;
 
 
diff -rupN nginx-1.4.0.native/src/http/ngx_http.c nginx-1.4.0/src/http/ngx_http.c
--- nginx-1.4.0.native/src/http/ngx_http.c	2013-03-21 12:03:24.000000000 -0400
+++ nginx-1.4.0/src/http/ngx_http.c	2015-03-08 20:52:36.188733681 -0400
@@ -70,7 +70,7 @@ ngx_uint_t   ngx_http_max_module;
 
 
 ngx_int_t  (*ngx_http_top_header_filter) (ngx_http_request_t *r);
-ngx_int_t  (*ngx_http_top_body_filter) (ngx_http_request_t *r, ngx_chain_t *ch);
+ngx_int_t  (*ngx_http_top_body_filter) (void *ctx, ngx_chain_t *ch);
 
 
 ngx_str_t  ngx_http_html_default_types[] = {
diff -rupN nginx-1.4.0.native/src/http/ngx_http_copy_filter_module.c nginx-1.4.0/src/http/ngx_http_copy_filter_module.c
--- nginx-1.4.0.native/src/http/ngx_http_copy_filter_module.c	2012-03-15 16:08:58.000000000 -0400
+++ nginx-1.4.0/src/http/ngx_http_copy_filter_module.c	2015-03-08 21:00:27.020733625 -0400
@@ -78,7 +78,7 @@ static ngx_http_output_body_filter_pt
 
 
 static ngx_int_t
-ngx_http_copy_filter(ngx_http_request_t *r, ngx_chain_t *in)
+ngx_http_copy_filter(void *context, ngx_chain_t *in)
 {
     ngx_int_t                     rc;
     ngx_connection_t             *c;
@@ -86,6 +86,7 @@ ngx_http_copy_filter(ngx_http_request_t
     ngx_http_core_loc_conf_t     *clcf;
     ngx_http_copy_filter_conf_t  *conf;
 
+    ngx_http_request_t *r = (ngx_http_request_t*)context;
     c = r->connection;
 
     ngx_log_debug2(NGX_LOG_DEBUG_HTTP, c->log, 0,
diff -rupN nginx-1.4.0.native/src/http/ngx_http_core_module.c nginx-1.4.0/src/http/ngx_http_core_module.c
--- nginx-1.4.0.native/src/http/ngx_http_core_module.c	2013-03-29 04:47:37.000000000 -0400
+++ nginx-1.4.0/src/http/ngx_http_core_module.c	2015-03-08 21:10:34.980733552 -0400
@@ -1943,11 +1943,11 @@ ngx_http_send_header(ngx_http_request_t
 
 
 ngx_int_t
-ngx_http_output_filter(ngx_http_request_t *r, ngx_chain_t *in)
+ngx_http_output_filter(void *context, ngx_chain_t *in)
 {
     ngx_int_t          rc;
     ngx_connection_t  *c;
-
+    ngx_http_request_t *r = (ngx_http_request_t *)context;
     c = r->connection;
 
     ngx_log_debug2(NGX_LOG_DEBUG_HTTP, c->log, 0,
diff -rupN nginx-1.4.0.native/src/http/ngx_http_core_module.h nginx-1.4.0/src/http/ngx_http_core_module.h
--- nginx-1.4.0.native/src/http/ngx_http_core_module.h	2013-03-20 06:36:57.000000000 -0400
+++ nginx-1.4.0/src/http/ngx_http_core_module.h	2015-03-08 21:09:47.032733558 -0400
@@ -519,11 +519,12 @@ ngx_http_cleanup_t *ngx_http_cleanup_add
 
 typedef ngx_int_t (*ngx_http_output_header_filter_pt)(ngx_http_request_t *r);
 typedef ngx_int_t (*ngx_http_output_body_filter_pt)
-    (ngx_http_request_t *r, ngx_chain_t *chain);
+(void *ctx, ngx_chain_t *chain);
+//    (ngx_http_request_t *r, ngx_chain_t *chain);
 
 
-ngx_int_t ngx_http_output_filter(ngx_http_request_t *r, ngx_chain_t *chain);
-ngx_int_t ngx_http_write_filter(ngx_http_request_t *r, ngx_chain_t *chain);
+ngx_int_t ngx_http_output_filter(void *ctx, ngx_chain_t *chain);
+ngx_int_t ngx_http_write_filter(void *ctx, ngx_chain_t *chain);
 
 
 ngx_int_t ngx_http_set_disable_symlinks(ngx_http_request_t *r,
diff -rupN nginx-1.4.0.native/src/http/ngx_http_postpone_filter_module.c nginx-1.4.0/src/http/ngx_http_postpone_filter_module.c
--- nginx-1.4.0.native/src/http/ngx_http_postpone_filter_module.c	2012-03-15 16:08:58.000000000 -0400
+++ nginx-1.4.0/src/http/ngx_http_postpone_filter_module.c	2015-03-08 21:01:34.404733617 -0400
@@ -50,11 +50,11 @@ static ngx_http_output_body_filter_pt
 
 
 static ngx_int_t
-ngx_http_postpone_filter(ngx_http_request_t *r, ngx_chain_t *in)
+ngx_http_postpone_filter(void *context, ngx_chain_t *in)
 {
     ngx_connection_t              *c;
     ngx_http_postponed_request_t  *pr;
-
+    ngx_http_request_t *r = (ngx_http_request_t*)context;
     c = r->connection;
 
     ngx_log_debug3(NGX_LOG_DEBUG_HTTP, c->log, 0,
diff -rupN nginx-1.4.0.native/src/http/ngx_http_script.c nginx-1.4.0/src/http/ngx_http_script.c
--- nginx-1.4.0.native/src/http/ngx_http_script.c	2012-12-06 18:03:53.000000000 -0500
+++ nginx-1.4.0/src/http/ngx_http_script.c	2015-03-08 21:22:49.464733465 -0400
@@ -26,6 +26,10 @@ static ngx_int_t
 static size_t ngx_http_script_full_name_len_code(ngx_http_script_engine_t *e);
 static void ngx_http_script_full_name_code(ngx_http_script_engine_t *e);
 
+void ngx_http_script_copy_len_code_wrapper(ngx_http_script_engine_t *e);
+void ngx_http_script_copy_var_len_code_wrapper(ngx_http_script_engine_t *e);
+void ngx_http_script_copy_capture_len_code_wrapper(ngx_http_script_engine_t *e);
+void ngx_http_script_full_name_len_code_wrapper(ngx_http_script_engine_t *e);
 
 #define ngx_http_script_exit  (u_char *) &ngx_http_script_exit_code
 
@@ -693,7 +697,7 @@ ngx_http_script_add_copy_code(ngx_http_s
         return NGX_ERROR;
     }
 
-    code->code = (ngx_http_script_code_pt) ngx_http_script_copy_len_code;
+    code->code = ngx_http_script_copy_len_code_wrapper;
     code->len = len;
 
     size = (sizeof(ngx_http_script_copy_code_t) + len + sizeof(uintptr_t) - 1)
@@ -718,7 +722,6 @@ ngx_http_script_add_copy_code(ngx_http_s
     return NGX_OK;
 }
 
-
 size_t
 ngx_http_script_copy_len_code(ngx_http_script_engine_t *e)
 {
@@ -731,6 +734,9 @@ ngx_http_script_copy_len_code(ngx_http_s
     return code->len;
 }
 
+void ngx_http_script_copy_len_code_wrapper(ngx_http_script_engine_t *e) {
+  ngx_http_script_copy_len_code(e);
+}
 
 void
 ngx_http_script_copy_code(ngx_http_script_engine_t *e)
@@ -782,7 +788,7 @@ ngx_http_script_add_var_code(ngx_http_sc
         return NGX_ERROR;
     }
 
-    code->code = (ngx_http_script_code_pt) ngx_http_script_copy_var_len_code;
+    code->code = ngx_http_script_copy_var_len_code_wrapper;
     code->index = (uintptr_t) index;
 
     code = ngx_http_script_add_code(*sc->values,
@@ -823,6 +829,10 @@ ngx_http_script_copy_var_len_code(ngx_ht
     return 0;
 }
 
+void
+ngx_http_script_copy_var_len_code_wrapper(ngx_http_script_engine_t *e) {
+  ngx_http_script_copy_var_len_code(e);
+}
 
 void
 ngx_http_script_copy_var_code(ngx_http_script_engine_t *e)
@@ -1176,8 +1186,7 @@ ngx_http_script_add_capture_code(ngx_htt
         return NGX_ERROR;
     }
 
-    code->code = (ngx_http_script_code_pt)
-                      ngx_http_script_copy_capture_len_code;
+    code->code = ngx_http_script_copy_capture_len_code_wrapper;
     code->n = 2 * n;
 
 
@@ -1198,7 +1207,6 @@ ngx_http_script_add_capture_code(ngx_htt
     return NGX_OK;
 }
 
-
 size_t
 ngx_http_script_copy_capture_len_code(ngx_http_script_engine_t *e)
 {
@@ -1236,6 +1244,10 @@ ngx_http_script_copy_capture_len_code(ng
     return 0;
 }
 
+void
+ngx_http_script_copy_capture_len_code_wrapper(ngx_http_script_engine_t *e) {
+  ngx_http_script_copy_capture_len_code(e);
+}
 
 void
 ngx_http_script_copy_capture_code(ngx_http_script_engine_t *e)
@@ -1291,7 +1303,7 @@ ngx_http_script_add_full_name_code(ngx_h
         return NGX_ERROR;
     }
 
-    code->code = (ngx_http_script_code_pt) ngx_http_script_full_name_len_code;
+    code->code = ngx_http_script_full_name_len_code_wrapper;
     code->conf_prefix = sc->conf_prefix;
 
     code = ngx_http_script_add_code(*sc->values,
@@ -1321,6 +1333,10 @@ ngx_http_script_full_name_len_code(ngx_h
                                ngx_cycle->prefix.len;
 }
 
+void
+ngx_http_script_full_name_len_code_wrapper(ngx_http_script_engine_t *e) {
+  ngx_http_script_full_name_len_code(e);
+}
 
 static void
 ngx_http_script_full_name_code(ngx_http_script_engine_t *e)
diff -rupN nginx-1.4.0.native/src/http/ngx_http_script.h nginx-1.4.0/src/http/ngx_http_script.h
--- nginx-1.4.0.native/src/http/ngx_http_script.h	2012-01-18 10:07:43.000000000 -0500
+++ nginx-1.4.0/src/http/ngx_http_script.h	2015-03-08 21:25:59.540733442 -0400
@@ -229,8 +229,10 @@ void *ngx_http_script_start_code(ngx_poo
 void *ngx_http_script_add_code(ngx_array_t *codes, size_t size, void *code);
 
 size_t ngx_http_script_copy_len_code(ngx_http_script_engine_t *e);
+void ngx_http_script_copy_len_code_wrapper(ngx_http_script_engine_t *e);
 void ngx_http_script_copy_code(ngx_http_script_engine_t *e);
 size_t ngx_http_script_copy_var_len_code(ngx_http_script_engine_t *e);
+void ngx_http_script_copy_var_len_code_wrapper(ngx_http_script_engine_t *e);
 void ngx_http_script_copy_var_code(ngx_http_script_engine_t *e);
 size_t ngx_http_script_copy_capture_len_code(ngx_http_script_engine_t *e);
 void ngx_http_script_copy_capture_code(ngx_http_script_engine_t *e);
diff -rupN nginx-1.4.0.native/src/http/ngx_http_write_filter_module.c nginx-1.4.0/src/http/ngx_http_write_filter_module.c
--- nginx-1.4.0.native/src/http/ngx_http_write_filter_module.c	2012-12-12 09:48:48.000000000 -0500
+++ nginx-1.4.0/src/http/ngx_http_write_filter_module.c	2015-03-08 20:59:56.284733628 -0400
@@ -45,7 +45,7 @@ ngx_module_t  ngx_http_write_filter_modu
 
 
 ngx_int_t
-ngx_http_write_filter(ngx_http_request_t *r, ngx_chain_t *in)
+ngx_http_write_filter(void *context, ngx_chain_t *in)
 {
     off_t                      size, sent, nsent, limit;
     ngx_uint_t                 last, flush;
@@ -54,6 +54,7 @@ ngx_http_write_filter(ngx_http_request_t
     ngx_connection_t          *c;
     ngx_http_core_loc_conf_t  *clcf;
 
+    ngx_http_request_t *r = (ngx_http_request_t*)context;
     c = r->connection;
 
     if (c->error) {
diff -rupN nginx-1.4.0.native/src/os/unix/ngx_linux_config.h nginx-1.4.0/src/os/unix/ngx_linux_config.h
--- nginx-1.4.0.native/src/os/unix/ngx_linux_config.h	2012-01-18 10:07:43.000000000 -0500
+++ nginx-1.4.0/src/os/unix/ngx_linux_config.h	2014-12-20 14:12:38.239420188 -0500
@@ -51,7 +51,7 @@
 #include <malloc.h>             /* memalign() */
 #include <limits.h>             /* IOV_MAX */
 #include <sys/ioctl.h>
-#include <sys/sysctl.h>
+/*#include <sys/sysctl.h>*/
 #include <crypt.h>
 #include <sys/utsname.h>        /* uname() */
 
diff -rupN nginx-1.4.0.native/src/os/unix/ngx_process.c nginx-1.4.0/src/os/unix/ngx_process.c
--- nginx-1.4.0.native/src/os/unix/ngx_process.c	2012-10-18 10:48:33.000000000 -0400
+++ nginx-1.4.0/src/os/unix/ngx_process.c	2014-12-20 14:21:21.395411222 -0500
@@ -21,7 +21,7 @@ typedef struct {
 
 
 static void ngx_execute_proc(ngx_cycle_t *cycle, void *data);
-static void ngx_signal_handler(int signo);
+static void ngx_signal_handler(int signo) __attribute__((signalhandler));
 static void ngx_process_get_status(void);
 static void ngx_unlock_mutexes(ngx_pid_t pid);
 
diff -rupN nginx-1.4.0.native/src/os/unix/ngx_send.c nginx-1.4.0/src/os/unix/ngx_send.c
--- nginx-1.4.0.native/src/os/unix/ngx_send.c	2012-01-18 10:07:43.000000000 -0500
+++ nginx-1.4.0/src/os/unix/ngx_send.c	2015-03-01 11:45:54.801924399 -0500
@@ -31,6 +31,8 @@ ngx_unix_send(ngx_connection_t *c, u_cha
 #endif
 
     for ( ;; ) {
+      // make sure that send does not cover the code and stack
+      //CHECK(!cover_code(buf, size) && !cover_stack(buf, size));
         n = send(c->fd, buf, size, 0);
 
         ngx_log_debug3(NGX_LOG_DEBUG_EVENT, c->log, 0,
diff -rupN nginx-1.4.0.native/src/os/unix/ngx_user.c nginx-1.4.0/src/os/unix/ngx_user.c
--- nginx-1.4.0.native/src/os/unix/ngx_user.c	2012-12-21 11:13:03.000000000 -0500
+++ nginx-1.4.0/src/os/unix/ngx_user.c	2014-12-20 14:13:56.203418851 -0500
@@ -32,7 +32,7 @@ ngx_libc_crypt(ngx_pool_t *pool, u_char
 
     cd.initialized = 0;
     /* work around the glibc bug */
-    cd.current_salt[0] = ~salt[0];
+    /* cd.current_salt[0] = ~salt[0]; */
 
     value = crypt_r((char *) key, (char *) salt, &cd);
 
